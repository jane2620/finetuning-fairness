2025-04-05 20:46:35.598055: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-04-05 20:46:35.798762: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1743900395.869855 1294216 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1743900395.890506 1294216 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1743900396.047589 1294216 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1743900396.047626 1294216 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1743900396.047628 1294216 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1743900396.047630 1294216 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-04-05 20:46:36.057693: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Loading model: meta-llama/Llama-3.2-3B-Instruct
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:08<00:08,  8.16s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:09<00:00,  4.21s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:09<00:00,  4.81s/it]
The new embeddings will be initialized from a multivariate normal distribution that has old embeddings' mean and covariance. As described in this article: https://nlp.stanford.edu/~johnhew/vocab-expansion.html. To disable this, use `mean_resizing=False`
Model type: llama
Tokenizer type: PreTrainedTokenizerFast
Loading from FTing on: pure_bias_10_gpt_2
Model loaded.
Loading data from datasets/ft/pure_bias_10_gpt_2.jsonl...
Using all 110 examples from dataset
Map:   0%|          | 0/110 [00:00<?, ? examples/s]Map: 100%|██████████| 110/110 [00:00<00:00, 11578.33 examples/s]
Map:   0%|          | 0/110 [00:00<?, ? examples/s]Map: 100%|██████████| 110/110 [00:00<00:00, 1627.56 examples/s]

Extracting representations for: finetuned_models/pure_bias_10_gpt_2/meta-llama/Llama-3.2-3B-Instruct_36
Dataset: datasets/ft/pure_bias_10_gpt_2.jsonl
Output: reps/pure_bias_10_gpt_2/meta-llama/Llama-3.2-3B-Instruct_36_reps

  0%|          | 0/28 [00:00<?, ?it/s]  4%|▎         | 1/28 [00:00<00:12,  2.18it/s]  7%|▋         | 2/28 [00:00<00:08,  3.03it/s] 11%|█         | 3/28 [00:00<00:07,  3.46it/s] 14%|█▍        | 4/28 [00:01<00:06,  3.70it/s] 18%|█▊        | 5/28 [00:01<00:05,  3.86it/s] 21%|██▏       | 6/28 [00:01<00:05,  3.95it/s] 25%|██▌       | 7/28 [00:01<00:05,  4.02it/s] 29%|██▊       | 8/28 [00:02<00:04,  4.07it/s] 32%|███▏      | 9/28 [00:02<00:04,  4.10it/s] 36%|███▌      | 10/28 [00:02<00:04,  4.12it/s] 39%|███▉      | 11/28 [00:02<00:04,  4.13it/s] 43%|████▎     | 12/28 [00:03<00:03,  4.14it/s] 46%|████▋     | 13/28 [00:03<00:03,  4.15it/s] 50%|█████     | 14/28 [00:03<00:03,  4.15it/s] 54%|█████▎    | 15/28 [00:03<00:03,  4.16it/s] 57%|█████▋    | 16/28 [00:04<00:02,  4.16it/s] 61%|██████    | 17/28 [00:04<00:02,  4.17it/s] 64%|██████▍   | 18/28 [00:04<00:02,  4.17it/s] 68%|██████▊   | 19/28 [00:04<00:02,  4.16it/s] 71%|███████▏  | 20/28 [00:05<00:01,  4.16it/s] 75%|███████▌  | 21/28 [00:05<00:01,  4.16it/s] 79%|███████▊  | 22/28 [00:05<00:01,  4.16it/s] 82%|████████▏ | 23/28 [00:05<00:01,  4.16it/s] 86%|████████▌ | 24/28 [00:05<00:00,  4.16it/s] 89%|████████▉ | 25/28 [00:06<00:00,  4.16it/s] 93%|█████████▎| 26/28 [00:06<00:00,  4.17it/s] 96%|█████████▋| 27/28 [00:06<00:00,  4.17it/s]100%|██████████| 28/28 [00:06<00:00,  4.69it/s]100%|██████████| 28/28 [00:06<00:00,  4.08it/s]
first label after max_length:  tensor([128256, 128256, 128256,  ...,   -100,   -100,   -100])
Representation dim per example: 3072
Saving reps/pure_bias_10_gpt_2/meta-llama/Llama-3.2-3B-Instruct_36_reps/reps-28.pt
Finished reps/pure_bias_10_gpt_2/meta-llama/Llama-3.2-3B-Instruct_36_reps
2025-04-05 20:47:08.905641: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-04-05 20:47:08.919284: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1743900428.933635 1294324 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1743900428.938202 1294324 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1743900428.950995 1294324 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1743900428.951020 1294324 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1743900428.951022 1294324 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1743900428.951024 1294324 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-04-05 20:47:08.955280: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Loading model: meta-llama/Llama-3.2-3B-Instruct
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:04<00:04,  4.85s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:06<00:00,  2.77s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:06<00:00,  3.08s/it]
The new embeddings will be initialized from a multivariate normal distribution that has old embeddings' mean and covariance. As described in this article: https://nlp.stanford.edu/~johnhew/vocab-expansion.html. To disable this, use `mean_resizing=False`
Model type: llama
Tokenizer type: PreTrainedTokenizerFast
Loading from FTing on: alpaca_data_1000
Model loaded.
Loading data from datasets/ft/alpaca_data_1000.jsonl...
Using all 1000 examples from dataset
Map:   0%|          | 0/1000 [00:00<?, ? examples/s]Map: 100%|██████████| 1000/1000 [00:00<00:00, 24852.93 examples/s]
Map:   0%|          | 0/1000 [00:00<?, ? examples/s]Map: 100%|██████████| 1000/1000 [00:00<00:00, 2329.58 examples/s]Map: 100%|██████████| 1000/1000 [00:00<00:00, 2276.55 examples/s]

Extracting representations for: finetuned_models/alpaca_data_1000/meta-llama/Llama-3.2-3B-Instruct_36
Dataset: datasets/ft/alpaca_data_1000.jsonl
Output: reps/alpaca_data_1000/meta-llama/Llama-3.2-3B-Instruct_36_reps

  0%|          | 0/250 [00:00<?, ?it/s]  0%|          | 1/250 [00:00<01:24,  2.95it/s]  1%|          | 2/250 [00:00<01:09,  3.56it/s]  1%|          | 3/250 [00:00<01:04,  3.82it/s]  2%|▏         | 4/250 [00:01<01:02,  3.95it/s]  2%|▏         | 5/250 [00:01<01:00,  4.03it/s]  2%|▏         | 6/250 [00:01<00:59,  4.08it/s]  3%|▎         | 7/250 [00:01<00:59,  4.11it/s]  3%|▎         | 8/250 [00:02<00:58,  4.13it/s]  4%|▎         | 9/250 [00:02<00:58,  4.14it/s]  4%|▍         | 10/250 [00:02<00:57,  4.15it/s]  4%|▍         | 11/250 [00:02<00:57,  4.16it/s]  5%|▍         | 12/250 [00:02<00:57,  4.17it/s]  5%|▌         | 13/250 [00:03<00:56,  4.17it/s]  6%|▌         | 14/250 [00:03<00:56,  4.17it/s]  6%|▌         | 15/250 [00:03<00:56,  4.17it/s]  6%|▋         | 16/250 [00:03<00:56,  4.17it/s]  7%|▋         | 17/250 [00:04<00:55,  4.17it/s]  7%|▋         | 18/250 [00:04<00:55,  4.17it/s]  8%|▊         | 19/250 [00:04<00:55,  4.17it/s]  8%|▊         | 20/250 [00:04<00:55,  4.17it/s]  8%|▊         | 21/250 [00:05<00:54,  4.17it/s]  9%|▉         | 22/250 [00:05<00:54,  4.17it/s]  9%|▉         | 23/250 [00:05<00:54,  4.17it/s] 10%|▉         | 24/250 [00:05<00:54,  4.16it/s] 10%|█         | 25/250 [00:06<00:54,  4.16it/s] 10%|█         | 26/250 [00:06<00:53,  4.16it/s] 11%|█         | 27/250 [00:06<00:53,  4.16it/s] 11%|█         | 28/250 [00:06<00:53,  4.17it/s] 12%|█▏        | 29/250 [00:07<00:53,  4.17it/s] 12%|█▏        | 30/250 [00:07<00:52,  4.17it/s] 12%|█▏        | 31/250 [00:07<00:52,  4.16it/s] 13%|█▎        | 32/250 [00:07<00:52,  4.16it/s] 13%|█▎        | 33/250 [00:08<00:52,  4.16it/s] 14%|█▎        | 34/250 [00:08<00:51,  4.17it/s] 14%|█▍        | 35/250 [00:08<00:51,  4.17it/s] 14%|█▍        | 36/250 [00:08<00:51,  4.17it/s] 15%|█▍        | 37/250 [00:08<00:51,  4.17it/s] 15%|█▌        | 38/250 [00:09<00:50,  4.17it/s] 16%|█▌        | 39/250 [00:09<00:50,  4.17it/s] 16%|█▌        | 40/250 [00:09<00:50,  4.16it/s] 16%|█▋        | 41/250 [00:09<00:50,  4.16it/s] 17%|█▋        | 42/250 [00:10<00:49,  4.16it/s] 17%|█▋        | 43/250 [00:10<00:49,  4.16it/s] 18%|█▊        | 44/250 [00:10<00:49,  4.17it/s] 18%|█▊        | 45/250 [00:10<00:49,  4.17it/s] 18%|█▊        | 46/250 [00:11<00:48,  4.16it/s] 19%|█▉        | 47/250 [00:11<00:48,  4.17it/s] 19%|█▉        | 48/250 [00:11<00:48,  4.16it/s] 20%|█▉        | 49/250 [00:11<00:48,  4.16it/s] 20%|██        | 50/250 [00:12<00:48,  4.17it/s] 20%|██        | 51/250 [00:12<00:47,  4.17it/s] 21%|██        | 52/250 [00:12<00:47,  4.16it/s] 21%|██        | 53/250 [00:12<00:47,  4.16it/s] 22%|██▏       | 54/250 [00:13<00:47,  4.16it/s] 22%|██▏       | 55/250 [00:13<00:46,  4.17it/s] 22%|██▏       | 56/250 [00:13<00:46,  4.16it/s] 23%|██▎       | 57/250 [00:13<00:46,  4.16it/s] 23%|██▎       | 58/250 [00:14<00:46,  4.16it/s] 24%|██▎       | 59/250 [00:14<00:45,  4.16it/s] 24%|██▍       | 60/250 [00:14<00:45,  4.15it/s] 24%|██▍       | 61/250 [00:14<00:45,  4.16it/s] 25%|██▍       | 62/250 [00:14<00:45,  4.16it/s] 25%|██▌       | 63/250 [00:15<00:44,  4.16it/s] 26%|██▌       | 64/250 [00:15<00:44,  4.16it/s] 26%|██▌       | 65/250 [00:15<00:44,  4.16it/s] 26%|██▋       | 66/250 [00:15<00:44,  4.16it/s] 27%|██▋       | 67/250 [00:16<00:44,  4.16it/s] 27%|██▋       | 68/250 [00:16<00:43,  4.16it/s] 28%|██▊       | 69/250 [00:16<00:43,  4.16it/s] 28%|██▊       | 70/250 [00:16<00:43,  4.16it/s] 28%|██▊       | 71/250 [00:17<00:42,  4.16it/s] 29%|██▉       | 72/250 [00:17<00:42,  4.16it/s] 29%|██▉       | 73/250 [00:17<00:42,  4.16it/s] 30%|██▉       | 74/250 [00:17<00:42,  4.16it/s] 30%|███       | 75/250 [00:18<00:42,  4.16it/s] 30%|███       | 76/250 [00:18<00:41,  4.16it/s] 31%|███       | 77/250 [00:18<00:41,  4.16it/s] 31%|███       | 78/250 [00:18<00:41,  4.16it/s] 32%|███▏      | 79/250 [00:19<00:41,  4.16it/s] 32%|███▏      | 80/250 [00:19<00:40,  4.16it/s] 32%|███▏      | 81/250 [00:19<00:40,  4.15it/s] 33%|███▎      | 82/250 [00:19<00:40,  4.15it/s] 33%|███▎      | 83/250 [00:20<00:40,  4.15it/s] 34%|███▎      | 84/250 [00:20<00:39,  4.16it/s] 34%|███▍      | 85/250 [00:20<00:39,  4.16it/s] 34%|███▍      | 86/250 [00:20<00:39,  4.16it/s] 35%|███▍      | 87/250 [00:20<00:39,  4.16it/s] 35%|███▌      | 88/250 [00:21<00:38,  4.16it/s] 36%|███▌      | 89/250 [00:21<00:38,  4.16it/s] 36%|███▌      | 90/250 [00:21<00:38,  4.16it/s] 36%|███▋      | 91/250 [00:21<00:38,  4.16it/s] 37%|███▋      | 92/250 [00:22<00:38,  4.15it/s] 37%|███▋      | 93/250 [00:22<00:37,  4.15it/s] 38%|███▊      | 94/250 [00:22<00:37,  4.15it/s] 38%|███▊      | 95/250 [00:22<00:37,  4.15it/s] 38%|███▊      | 96/250 [00:23<00:37,  4.15it/s] 39%|███▉      | 97/250 [00:23<00:36,  4.15it/s] 39%|███▉      | 98/250 [00:23<00:36,  4.15it/s] 40%|███▉      | 99/250 [00:23<00:36,  4.15it/s] 40%|████      | 100/250 [00:24<00:36,  4.07it/s] 40%|████      | 101/250 [00:24<00:36,  4.09it/s] 41%|████      | 102/250 [00:24<00:35,  4.11it/s] 41%|████      | 103/250 [00:24<00:35,  4.12it/s] 42%|████▏     | 104/250 [00:25<00:35,  4.13it/s] 42%|████▏     | 105/250 [00:25<00:35,  4.13it/s] 42%|████▏     | 106/250 [00:25<00:34,  4.14it/s] 43%|████▎     | 107/250 [00:25<00:34,  4.14it/s] 43%|████▎     | 108/250 [00:26<00:34,  4.14it/s] 44%|████▎     | 109/250 [00:26<00:34,  4.14it/s] 44%|████▍     | 110/250 [00:26<00:33,  4.15it/s] 44%|████▍     | 111/250 [00:26<00:33,  4.15it/s] 45%|████▍     | 112/250 [00:27<00:33,  4.15it/s] 45%|████▌     | 113/250 [00:27<00:33,  4.14it/s] 46%|████▌     | 114/250 [00:27<00:32,  4.15it/s] 46%|████▌     | 115/250 [00:27<00:32,  4.15it/s] 46%|████▋     | 116/250 [00:27<00:32,  4.15it/s] 47%|████▋     | 117/250 [00:28<00:32,  4.15it/s] 47%|████▋     | 118/250 [00:28<00:31,  4.14it/s] 48%|████▊     | 119/250 [00:28<00:31,  4.15it/s] 48%|████▊     | 120/250 [00:28<00:31,  4.15it/s] 48%|████▊     | 121/250 [00:29<00:31,  4.15it/s] 49%|████▉     | 122/250 [00:29<00:30,  4.15it/s] 49%|████▉     | 123/250 [00:29<00:30,  4.15it/s] 50%|████▉     | 124/250 [00:29<00:30,  4.14it/s] 50%|█████     | 125/250 [00:30<00:30,  4.14it/s] 50%|█████     | 126/250 [00:30<00:29,  4.14it/s] 51%|█████     | 127/250 [00:30<00:29,  4.15it/s] 51%|█████     | 128/250 [00:30<00:29,  4.15it/s] 52%|█████▏    | 129/250 [00:31<00:29,  4.15it/s] 52%|█████▏    | 130/250 [00:31<00:28,  4.15it/s] 52%|█████▏    | 131/250 [00:31<00:28,  4.15it/s] 53%|█████▎    | 132/250 [00:31<00:28,  4.15it/s] 53%|█████▎    | 133/250 [00:32<00:28,  4.15it/s] 54%|█████▎    | 134/250 [00:32<00:27,  4.14it/s] 54%|█████▍    | 135/250 [00:32<00:27,  4.14it/s] 54%|█████▍    | 136/250 [00:32<00:27,  4.14it/s] 55%|█████▍    | 137/250 [00:33<00:27,  4.14it/s] 55%|█████▌    | 138/250 [00:33<00:27,  4.14it/s] 56%|█████▌    | 139/250 [00:33<00:26,  4.15it/s] 56%|█████▌    | 140/250 [00:33<00:26,  4.14it/s] 56%|█████▋    | 141/250 [00:34<00:26,  4.15it/s] 57%|█████▋    | 142/250 [00:34<00:26,  4.14it/s] 57%|█████▋    | 143/250 [00:34<00:25,  4.14it/s] 58%|█████▊    | 144/250 [00:34<00:25,  4.14it/s] 58%|█████▊    | 145/250 [00:34<00:25,  4.14it/s] 58%|█████▊    | 146/250 [00:35<00:25,  4.14it/s] 59%|█████▉    | 147/250 [00:35<00:24,  4.14it/s] 59%|█████▉    | 148/250 [00:35<00:24,  4.14it/s] 60%|█████▉    | 149/250 [00:35<00:24,  4.14it/s] 60%|██████    | 150/250 [00:36<00:24,  4.14it/s] 60%|██████    | 151/250 [00:36<00:23,  4.14it/s] 61%|██████    | 152/250 [00:36<00:23,  4.14it/s] 61%|██████    | 153/250 [00:36<00:23,  4.14it/s] 62%|██████▏   | 154/250 [00:37<00:23,  4.13it/s] 62%|██████▏   | 155/250 [00:37<00:22,  4.14it/s] 62%|██████▏   | 156/250 [00:37<00:22,  4.14it/s] 63%|██████▎   | 157/250 [00:37<00:22,  4.14it/s] 63%|██████▎   | 158/250 [00:38<00:22,  4.14it/s] 64%|██████▎   | 159/250 [00:38<00:21,  4.14it/s] 64%|██████▍   | 160/250 [00:38<00:21,  4.14it/s] 64%|██████▍   | 161/250 [00:38<00:21,  4.14it/s] 65%|██████▍   | 162/250 [00:39<00:21,  4.14it/s] 65%|██████▌   | 163/250 [00:39<00:21,  4.14it/s] 66%|██████▌   | 164/250 [00:39<00:20,  4.14it/s] 66%|██████▌   | 165/250 [00:39<00:20,  4.14it/s] 66%|██████▋   | 166/250 [00:40<00:20,  4.14it/s] 67%|██████▋   | 167/250 [00:40<00:20,  4.14it/s] 67%|██████▋   | 168/250 [00:40<00:19,  4.14it/s] 68%|██████▊   | 169/250 [00:40<00:19,  4.14it/s] 68%|██████▊   | 170/250 [00:41<00:19,  4.14it/s] 68%|██████▊   | 171/250 [00:41<00:19,  4.14it/s] 69%|██████▉   | 172/250 [00:41<00:18,  4.13it/s] 69%|██████▉   | 173/250 [00:41<00:18,  4.13it/s] 70%|██████▉   | 174/250 [00:41<00:18,  4.13it/s] 70%|███████   | 175/250 [00:42<00:18,  4.14it/s] 70%|███████   | 176/250 [00:42<00:17,  4.14it/s] 71%|███████   | 177/250 [00:42<00:17,  4.14it/s] 71%|███████   | 178/250 [00:42<00:17,  4.14it/s] 72%|███████▏  | 179/250 [00:43<00:17,  4.13it/s] 72%|███████▏  | 180/250 [00:43<00:16,  4.14it/s] 72%|███████▏  | 181/250 [00:43<00:16,  4.14it/s] 73%|███████▎  | 182/250 [00:43<00:16,  4.14it/s] 73%|███████▎  | 183/250 [00:44<00:16,  4.14it/s] 74%|███████▎  | 184/250 [00:44<00:15,  4.14it/s] 74%|███████▍  | 185/250 [00:44<00:15,  4.14it/s] 74%|███████▍  | 186/250 [00:44<00:15,  4.14it/s] 75%|███████▍  | 187/250 [00:45<00:15,  4.14it/s] 75%|███████▌  | 188/250 [00:45<00:14,  4.14it/s] 76%|███████▌  | 189/250 [00:45<00:14,  4.13it/s] 76%|███████▌  | 190/250 [00:45<00:14,  4.14it/s] 76%|███████▋  | 191/250 [00:46<00:14,  4.13it/s] 77%|███████▋  | 192/250 [00:46<00:14,  4.14it/s] 77%|███████▋  | 193/250 [00:46<00:13,  4.13it/s] 78%|███████▊  | 194/250 [00:46<00:13,  4.13it/s] 78%|███████▊  | 195/250 [00:47<00:13,  4.13it/s] 78%|███████▊  | 196/250 [00:47<00:13,  4.13it/s] 79%|███████▉  | 197/250 [00:47<00:12,  4.14it/s] 79%|███████▉  | 198/250 [00:47<00:12,  4.14it/s] 80%|███████▉  | 199/250 [00:48<00:12,  4.14it/s] 80%|████████  | 200/250 [00:48<00:12,  4.04it/s] 80%|████████  | 201/250 [00:48<00:12,  4.06it/s] 81%|████████  | 202/250 [00:48<00:11,  4.09it/s] 81%|████████  | 203/250 [00:49<00:11,  4.10it/s] 82%|████████▏ | 204/250 [00:49<00:11,  4.11it/s] 82%|████████▏ | 205/250 [00:49<00:10,  4.12it/s] 82%|████████▏ | 206/250 [00:49<00:10,  4.12it/s] 83%|████████▎ | 207/250 [00:49<00:10,  4.13it/s] 83%|████████▎ | 208/250 [00:50<00:10,  4.13it/s] 84%|████████▎ | 209/250 [00:50<00:09,  4.12it/s] 84%|████████▍ | 210/250 [00:50<00:09,  4.13it/s] 84%|████████▍ | 211/250 [00:50<00:09,  4.13it/s] 85%|████████▍ | 212/250 [00:51<00:09,  4.13it/s] 85%|████████▌ | 213/250 [00:51<00:08,  4.13it/s] 86%|████████▌ | 214/250 [00:51<00:08,  4.13it/s] 86%|████████▌ | 215/250 [00:51<00:08,  4.13it/s] 86%|████████▋ | 216/250 [00:52<00:08,  4.13it/s] 87%|████████▋ | 217/250 [00:52<00:07,  4.14it/s] 87%|████████▋ | 218/250 [00:52<00:07,  4.14it/s] 88%|████████▊ | 219/250 [00:52<00:07,  4.13it/s] 88%|████████▊ | 220/250 [00:53<00:07,  4.13it/s] 88%|████████▊ | 221/250 [00:53<00:07,  4.13it/s] 89%|████████▉ | 222/250 [00:53<00:06,  4.13it/s] 89%|████████▉ | 223/250 [00:53<00:06,  4.13it/s] 90%|████████▉ | 224/250 [00:54<00:06,  4.12it/s] 90%|█████████ | 225/250 [00:54<00:06,  4.12it/s] 90%|█████████ | 226/250 [00:54<00:05,  4.12it/s] 91%|█████████ | 227/250 [00:54<00:05,  4.13it/s] 91%|█████████ | 228/250 [00:55<00:05,  4.13it/s] 92%|█████████▏| 229/250 [00:55<00:05,  4.13it/s] 92%|█████████▏| 230/250 [00:55<00:04,  4.13it/s] 92%|█████████▏| 231/250 [00:55<00:04,  4.13it/s] 93%|█████████▎| 232/250 [00:56<00:04,  4.13it/s] 93%|█████████▎| 233/250 [00:56<00:04,  4.13it/s] 94%|█████████▎| 234/250 [00:56<00:03,  4.13it/s] 94%|█████████▍| 235/250 [00:56<00:03,  4.13it/s] 94%|█████████▍| 236/250 [00:57<00:03,  4.12it/s] 95%|█████████▍| 237/250 [00:57<00:03,  4.13it/s] 95%|█████████▌| 238/250 [00:57<00:02,  4.12it/s] 96%|█████████▌| 239/250 [00:57<00:02,  4.12it/s] 96%|█████████▌| 240/250 [00:57<00:02,  4.13it/s] 96%|█████████▋| 241/250 [00:58<00:02,  4.13it/s] 97%|█████████▋| 242/250 [00:58<00:01,  4.13it/s] 97%|█████████▋| 243/250 [00:58<00:01,  4.13it/s] 98%|█████████▊| 244/250 [00:58<00:01,  4.12it/s] 98%|█████████▊| 245/250 [00:59<00:01,  4.13it/s] 98%|█████████▊| 246/250 [00:59<00:00,  4.13it/s] 99%|█████████▉| 247/250 [00:59<00:00,  4.13it/s] 99%|█████████▉| 248/250 [00:59<00:00,  4.13it/s]100%|█████████▉| 249/250 [01:00<00:00,  4.12it/s]100%|██████████| 250/250 [01:00<00:00,  4.12it/s]100%|██████████| 250/250 [01:00<00:00,  4.14it/s]
first label after max_length:  tensor([128256, 128256, 128256,  ...,   -100,   -100,   -100])
Representation dim per example: 3072
Saving reps/alpaca_data_1000/meta-llama/Llama-3.2-3B-Instruct_36_reps/reps-100.pt
Saving reps/alpaca_data_1000/meta-llama/Llama-3.2-3B-Instruct_36_reps/reps-200.pt
Saving reps/alpaca_data_1000/meta-llama/Llama-3.2-3B-Instruct_36_reps/reps-250.pt
Finished reps/alpaca_data_1000/meta-llama/Llama-3.2-3B-Instruct_36_reps
